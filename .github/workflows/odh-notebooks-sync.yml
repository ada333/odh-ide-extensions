# The aim of this GitHub workflow is to update the pyproject.toml to sync with extension mentioned in parameter release.
name: Sync ODH-notebooks with extension release
on:
  workflow_dispatch:
    inputs:
      extension-name:
        required: true
        description: "Name of the extension"
        default: "odh-jupyter-trash-cleanup"
      upstream-repository-organization:
        required: true
        description: "Owner of target upstream notebooks repository used to open a PR against"
        default: "opendatahub-io"
      notebooks-target-branch:
        required: true
        description: "Target branch of upstream repository"
        default: "main"
      repository-organization:
        required: true
        description: "Owner of origin notebooks repository used to open a PR"
        default: "ide-developer"
      repository-name:
        required: true
        description: "Name of the target repository"
        default: "notebooks"
      extension_release_version:
        required: true
        description: "Provide version of the extension release"

env:
  EXTENSION_NAME: ${{ github.event.inputs.extension-name }}
  BRANCH_NAME: ${{ github.event.inputs.notebooks-target-branch }}
  EXTENSION_RELEASE_VERSION: ${{ github.event.inputs.extension_release_version }}
  UPDATER_BRANCH: odh-sync-updater-${{ github.run_id }}
  UPSTREAM_OWNER: ${{ github.event.inputs.upstream-repository-organization }}
  REPO_OWNER: ${{ github.event.inputs.repository-organization }}
  REPO_NAME: ${{ github.event.inputs.repository-name }}
  GITHUB_TOKEN: ${{ secrets.IDE_DEVELOPER_TOKEN }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository and Sync
        run: |
          git clone https://x-access-token:${GITHUB_TOKEN}@github.com/$REPO_OWNER/$REPO_NAME.git $REPO_NAME
          cd $REPO_NAME
          git remote add upstream https://github.com/$UPSTREAM_OWNER/$REPO_NAME.git
          git config --global user.email "ide-developer@users.noreply.github.com"
          git config --global user.name "ide-developer"
          git checkout $BRANCH_NAME
          git pull --ff-only upstream $BRANCH_NAME && git push origin $BRANCH_NAME

      - name: Update pyproject.toml with extension release version
        run: |
          cd "$REPO_NAME"
          find . -name "pyproject.toml" | while read file; do
            sed -i "s|${EXTENSION_NAME}==[0-9A-Za-z._-]*|${EXTENSION_NAME}==${EXTENSION_RELEASE_VERSION}|" "$file"
          done
          if test -n "$(git status --porcelain)"; then
            make refresh-pipfilelock-files
          else
            echo "No changes detected"
            exit 1
          fi

      - name: Push changes
        run: |
          cd "$REPO_NAME"
          git checkout -b "${{ env.UPDATER_BRANCH }}"
          if test -n "$(git status --porcelain)"; then
           git add -A
            git commit -m "chore: bump ${EXTENSION_NAME} to $EXTENSION_RELEASE_VERSION" --signoff
            git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/"$REPO_OWNER"/"$REPO_NAME".git
            git push origin "${{ env.UPDATER_BRANCH }}"
          else
            echo "No changes detected; skipping commit and push."
            exit 1
          fi
      - name: Create Pull Request
        run: |
          gh pr create --repo $UPSTREAM_OWNER/$REPO_NAME \
            --title "$pr_title" \
            --body "$pr_body" \
            --head $REPO_OWNER:$UPDATER_BRANCH \
            --base $BRANCH_NAME
        env:
          GH_TOKEN: ${{ secrets.IDE_DEVELOPER_TOKEN }}
          pr_title: "[${{ env.EXTENSION_NAME }}] Update notebook's pyproject.toml to sync with ${{ env.EXTENSION_NAME }} release ${{ env.EXTENSION_RELEASE_VERSION }}"
          pr_body: |
            :rocket: This is an automated Pull Request generated by (https://github.com/${{ github.repository }}/blob/main/.github/workflows/odh-notebooks-sync.yml) workflow.

            This PR updates the `pyproject.toml` to sync with latest ${{ env.EXTENSION_NAME }} release.
